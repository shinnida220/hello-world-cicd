# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

os_default: &os_default
  docker:
    - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
    steps:
      - run: "echo WorkflowID: ${CIRCLE_WORKFLOW_ID}"

  print_pipeline_id_using_pv:
    parameters:
      pid:
        type: string
    steps:
      - run: "echo Pipeline ID is: << parameters.pid >>"

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    <<: *os_default
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  print-hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print Hello"
          command: "echo Hello"

  print-world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print Hello"
          command: "echo World"

  print-dev-name:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print Dev Name"
          command: "echo Developer Name: ${DEV_NAME}"

  print-dev-name-using-multiline-command:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: "Print Dev Name"
          command: |
            echo Developer Name: ${DEV_NAME}

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "text to output here" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  print_pipeline_id_using_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
      - print_pipeline_id_using_pv:
          pid: << pipeline.id >>

  job_with_error:
    <<: *os_default
    steps:
      - run: return 1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-hello
      - print-world:
          requires:
            - print-hello
      - print-dev-name
      - print-dev-name-using-multiline-command
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - print_pipeline_id_using_command
      - job_with_error
